//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float MaxGlobalDistance;           // Offset:    0 Size:     4 [unused]
//   float4 GlobalVolumeCenterAndExtent[4];// Offset:   16 Size:    64 [unused]
//   float4 GlobalVolumeWorldToUVAddAndMul[4];// Offset:   80 Size:    64 [unused]
//   float GlobalVolumeDimension;       // Offset:  144 Size:     4 [unused]
//   float GlobalVolumeTexelSize;       // Offset:  148 Size:     4 [unused]
//   uint EmitterTickCounter;           // Offset:  152 Size:     4
//   int4 EmitterSpawnInfoOffsets[2];   // Offset:  160 Size:    32
//   float4 EmitterSpawnInfoParams[8];  // Offset:  192 Size:   128
//   uint SpawnedInstances;             // Offset:  320 Size:     4
//   uint UpdateStartInstance;          // Offset:  324 Size:     4
//   int DefaultSimulationStageIndex;   // Offset:  328 Size:     4 [unused]
//   int SimulationStageIndex;          // Offset:  332 Size:     4 [unused]
//   int IterationInterfaceCount;       // Offset:  336 Size:     4 [unused]
//   uint ComponentBufferSizeRead;      // Offset:  340 Size:     4
//   uint ComponentBufferSizeWrite;     // Offset:  344 Size:     4
//   int NumEventsPerParticle;          // Offset:  348 Size:     4 [unused]
//   int NumParticlesPerEvent;          // Offset:  352 Size:     4 [unused]
//   uint CopyInstancesBeforeStart;     // Offset:  356 Size:     4 [unused]
//   uint SimStart;                     // Offset:  360 Size:     4 [unused]
//   uint ReadInstanceCountOffset;      // Offset:  364 Size:     4
//   uint WriteInstanceCountOffset;     // Offset:  368 Size:     4
//   float3 TilingAxes_User_VectorField;// Offset:  372 Size:    12
//   float3 Dimensions_User_VectorField;// Offset:  384 Size:    12 [unused]
//   float3 MinBounds_User_VectorField; // Offset:  400 Size:    12
//   float3 MaxBounds_User_VectorField; // Offset:  416 Size:    12
//   float MinTime_Emitter_Color_ColorCurve;// Offset:  428 Size:     4
//   float MaxTime_Emitter_Color_ColorCurve;// Offset:  432 Size:     4 [unused]
//   float InvTimeRange_Emitter_Color_ColorCurve;// Offset:  436 Size:     4
//   float CurveLUTNumMinusOne_Emitter_Color_ColorCurve;// Offset:  440 Size:     4
//
// }
//
// cbuffer FNiagaraGlobalParameters
// {
//
//   float Engine_DeltaTime;            // Offset:    0 Size:     4
//   float Engine_InverseDeltaTime;     // Offset:    4 Size:     4
//   float Engine_Time;                 // Offset:    8 Size:     4 [unused]
//   float Engine_RealTime;             // Offset:   12 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraOwnerParameters
// {
//
//   row_major float4x4 Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64
//   row_major float4x4 Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 Engine_Owner_Rotation;      // Offset:  384 Size:    16
//   float4 Engine_Owner_Position;      // Offset:  400 Size:    16
//   float4 Engine_Owner_Velocity;      // Offset:  416 Size:    16 [unused]
//   float4 Engine_Owner_SystemXAxis;   // Offset:  432 Size:    16 [unused]
//   float4 Engine_Owner_SystemYAxis;   // Offset:  448 Size:    16 [unused]
//   float4 Engine_Owner_SystemZAxis;   // Offset:  464 Size:    16 [unused]
//   float4 Engine_Owner_Scale;         // Offset:  480 Size:    16
//
// }
//
// cbuffer FNiagaraEmitterParameters
// {
//
//   int Engine_Emitter_NumParticles;   // Offset:    0 Size:     4 [unused]
//   int Engine_Emitter_TotalSpawnedParticles;// Offset:    4 Size:     4
//   float Engine_Emitter_SpawnCountScale;// Offset:    8 Size:     4 [unused]
//   float Emitter_Age;                 // Offset:   12 Size:     4 [unused]
//   int Emitter_RandomSeed;            // Offset:   16 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_0; // Offset:   20 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_1; // Offset:   24 Size:     4 [unused]
//   int Engine_Emitter_PaddingInt32_2; // Offset:   28 Size:     4 [unused]
//
// }
//
// cbuffer FNiagaraExternalParameters
// {
//
//   int Constants_Emitter_SphereLocation_RandomSeed;// Offset:    0 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SurfaceOnlyBandThickness;// Offset:    4 Size:     4 [unused]
//   float Constants_Emitter_SphereLocation_SphereRadius;// Offset:    8 Size:     4
//   float4 Constants_Emitter_SphereLocation_NonUniformScale;// Offset:   16 Size:    16
//   float4 Constants_Emitter_SphereLocation_Offset;// Offset:   32 Size:    16
//   int Constants_Emitter_SphereLocation_SpawnGroupMask;// Offset:   48 Size:     4 [unused]
//   float Constants_Emitter_Vector2DFromFloat001_Value;// Offset:   52 Size:     4
//   float Constants_Emitter_UniformRangedFloat001_Minimum;// Offset:   56 Size:     4
//   float Constants_Emitter_UniformRangedFloat001_Maximum;// Offset:   60 Size:     4
//   int Constants_Emitter_UniformRangedFloat001_RandomSeed;// Offset:   64 Size:     4 [unused]
//   bool User_FieldUseExponentialFalloff;// Offset:   68 Size:     4
//   int User_FieldCoordinates;         // Offset:   72 Size:     4
//   bool User_FieldApplyFalloff;       // Offset:   76 Size:     4
//   float4 User_FieldScale;            // Offset:   80 Size:    16
//   float4 User_FieldLocation;         // Offset:   96 Size:    16
//   float4 User_FieldRotation;         // Offset:  112 Size:    16
//   float User_FieldFalloffDistance;   // Offset:  128 Size:     4
//   float Constants_Emitter_SampleVectorField_SampledVectorScale;// Offset:  132 Size:     4
//   float Constants_Emitter_ApplyVectorField_VectorFieldIntensityasForce;// Offset:  136 Size:     4
//   float Constants_Emitter_ApplyVectorField_VectorFieldIntensityasVelocity;// Offset:  140 Size:     4 [unused]
//   float Constants_Emitter_ApplyVectorField_VectorFieldVelocityTightness;// Offset:  144 Size:     4 [unused]
//   float4 Constants_Emitter_Color_ScaleColor;// Offset:  160 Size:    16
//   float Constants_Emitter_Color_ScaleAlpha;// Offset:  176 Size:     4
//   float Emitter_AlphaScale;          // Offset:  180 Size:     4
//   float Constants_Emitter_SolveForcesAndVelocity_SpeedLimit;// Offset:  184 Size:     4 [unused]
//   float Constants_Emitter_SolveForcesAndVelocity_AccelerationLimit;// Offset:  188 Size:     4 [unused]
//   float Emitter_SpawnRate;           // Offset:  192 Size:     4 [unused]
//
// }
//
// cbuffer PREV_FNiagaraOwnerParameters
// {
//
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorld;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocal;// Offset:   64 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldTransposed;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalTransposed;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemLocalToWorldNoScale;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 PREV_Engine_Owner_SystemWorldToLocalNoScale;// Offset:  320 Size:    64 [unused]
//   float4 PREV_Engine_Owner_Rotation; // Offset:  384 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Position; // Offset:  400 Size:    16
//   float4 PREV_Engine_Owner_Velocity; // Offset:  416 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemXAxis;// Offset:  432 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemYAxis;// Offset:  448 Size:    16 [unused]
//   float4 PREV_Engine_Owner_SystemZAxis;// Offset:  464 Size:    16 [unused]
//   float4 PREV_Engine_Owner_Scale;    // Offset:  480 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// VectorFieldSampler_User_VectorField    sampler      NA          NA             s0      1 
// InputFloat                        texture   float         buf             t0      1 
// InputInt                          texture    sint         buf             t1      1 
// VectorFieldTexture_User_VectorField    texture  float4          3d             t2      1 
// CurveLUT_Emitter_Color_ColorCurve    texture   float         buf             t3      1 
// RWOutputInt                           UAV    sint         buf             u0      1 
// RWOutputFloat                         UAV   float         buf             u1      1 
// RWInstanceCounts                      UAV    uint         buf             u2      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// FNiagaraGlobalParameters          cbuffer      NA          NA            cb1      1 
// FNiagaraOwnerParameters           cbuffer      NA          NA            cb2      1 
// FNiagaraEmitterParameters         cbuffer      NA          NA            cb3      1 
// FNiagaraExternalParameters        cbuffer      NA          NA            cb4      1 
// PREV_FNiagaraOwnerParameters      cbuffer      NA          NA            cb5      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[28], dynamicIndexed
dcl_constantbuffer CB1[1], immediateIndexed
dcl_constantbuffer CB2[31], immediateIndexed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB4[12], immediateIndexed
dcl_constantbuffer CB5[26], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_buffer (float,float,float,float) t0
dcl_resource_buffer (sint,sint,sint,sint) t1
dcl_resource_texture3d (float,float,float,float) t2
dcl_resource_buffer (float,float,float,float) t3
dcl_uav_typed_buffer (sint,sint,sint,sint) u0
dcl_uav_typed_buffer (float,float,float,float) u1
dcl_uav_typed_buffer (uint,uint,uint,uint) u2
dcl_input vThreadIDInGroup.x
dcl_input vThreadID.x
dcl_temps 12
dcl_tgsm_structured g0, 4, 32
dcl_tgsm_structured g1, 4, 8
dcl_tgsm_structured g2, 4, 2
dcl_tgsm_raw g3, 4
dcl_thread_group 32, 1, 1
iadd r0.x, vThreadID.x, cb0[20].y
ieq r0.y, cb0[22].w, l(-1)
ld_uav_typed_indexable(buffer)(uint,uint,uint,uint) r0.z, cb0[22].wwww, u2.yzxw
movc r0.y, r0.y, l(0), r0.z
iadd r0.z, r0.y, cb0[20].x
iadd r0.z, r0.z, cb0[20].y
ult r0.zw, r0.xxxx, r0.zzzy
and r0.w, r0.z, r0.w
if_nz r0.w
  ld_indexable(buffer)(float,float,float,float) r0.w, r0.xxxx, t0.yzwx
  imad r1.xyzw, l(5, 6, 9, 10), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.x, r1.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r1.y, r1.yyyy, t0.yxzw
  ishl r2.x, cb0[21].y, l(3)
  iadd r2.x, r0.x, r2.x
  ld_indexable(buffer)(float,float,float,float) r2.x, r2.xxxx, t0.xyzw
  ld_indexable(buffer)(float,float,float,float) r2.y, r1.zzzz, t0.yxzw
  ld_indexable(buffer)(float,float,float,float) r2.z, r1.wwww, t0.yzxw
  imad r1.zw, l(0, 0, 14, 15), cb0[21].yyyy, r0.xxxx
  ld_indexable(buffer)(float,float,float,float) r1.z, r1.zzzz, t0.yzxw
  ld_indexable(buffer)(float,float,float,float) r1.w, r1.wwww, t0.yzwx
  ld_indexable(buffer)(sint,sint,sint,sint) r2.w, r0.xxxx, t1.yzwx
  max r3.xyz, cb4[5].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
  ieq r4.xy, cb4[4].zzzz, l(1, 0, 0, 0)
  or r3.w, r4.y, r4.x
  mul r4.xyz, r3.xyzx, cb2[30].xyzx
  add r5.xyz, cb2[25].yzxy, cb4[6].yzxy
  mul r6.xyzw, cb2[24].xyzw, cb4[7].wwww
  mul r7.xyzw, cb2[24].wzyx, cb4[7].xxxx
  mad r6.xyzw, r7.xyzw, l(1.000000, -1.000000, 1.000000, -1.000000), r6.xyzw
  mul r7.xyzw, cb2[24].zwxy, cb4[7].yyyy
  mad r6.xyzw, r7.xyzw, l(1.000000, 1.000000, -1.000000, -1.000000), r6.xyzw
  mul r7.xyzw, cb2[24].yxwz, cb4[7].zzzz
  mad r6.xyzw, r7.xyzw, l(-1.000000, 1.000000, 1.000000, -1.000000), r6.xyzw
  movc r6.xyzw, r3.wwww, cb4[7].xyzw, r6.xyzw
  movc r3.xyz, r3.wwww, r3.xyzx, r4.xyzx
  movc r4.xyz, r3.wwww, cb4[6].yzxy, r5.xyzx
  add r4.xyz, -r4.xyzx, r2.yzxy
  mul r5.xyzw, r6.xyzw, l(-1.000000, -1.000000, -1.000000, 1.000000)
  dp3 r3.w, r5.yzxy, r4.xyzx
  add r3.w, r3.w, r3.w
  dp3 r4.w, r5.xyzx, r5.xyzx
  mad r4.w, r5.w, r5.w, -r4.w
  mul r7.xyz, r4.zxyz, r4.wwww
  mad r7.xyz, r5.xyzx, r3.wwww, r7.xyzx
  mul r8.xyz, r4.xyzx, r5.zxyz
  mad r4.xyz, r5.yzxy, r4.yzxy, -r8.xyzx
  add r3.w, r6.w, r6.w
  mad r4.xyz, r4.xyzx, r3.wwww, r7.xyzx
  div r3.xyz, r4.xyzx, r3.xyzx
  add r4.xyz, r3.xyzx, -cb0[25].xyzx
  add r5.xyz, -cb0[25].xyzx, cb0[26].xyzx
  div r4.xyz, r4.xyzx, r5.xyzx
  sample_l_indexable(texture3d)(float,float,float,float) r4.xyz, r4.xyzx, t2.xyzw, s0, l(0.000000)
  dp3 r4.w, r6.xyzx, r4.xyzx
  add r4.w, r4.w, r4.w
  dp3 r5.w, r6.xyzx, r6.xyzx
  mad r5.w, r6.w, r6.w, -r5.w
  mul r7.xyz, r4.xyzx, r5.wwww
  mad r7.xyz, r6.xyzx, r4.wwww, r7.xyzx
  mul r8.xyz, r4.yzxy, r6.zxyz
  mad r4.xyz, r6.yzxy, r4.zxyz, -r8.xyzx
  mad r4.xyz, r4.xyzx, r3.wwww, r7.xyzx
  mul r4.xyz, r4.xyzx, cb4[8].yyyy
  add r6.xyz, -r5.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
  mad r5.xyz, cb0[23].yzwy, r6.xyzx, r5.xyzx
  mad r3.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), -|r3.xyzx|
  min r3.y, r3.z, r3.y
  min r3.x, r3.y, r3.x
  max r3.x, r3.x, l(0.000000)
  max r3.y, cb4[8].x, l(1.000000)
  div r3.x, r3.x, r3.y
  mul r3.y, r3.x, l(-1.442695)
  exp r3.y, r3.y
  add r3.y, -r3.y, l(1.000000)
  min r3.x, r3.x, l(1.000000)
  movc r3.x, cb4[4].y, r3.y, r3.x
  movc r3.x, cb4[4].w, r3.x, l(1.000000)
  mul r3.xyz, r3.xxxx, r4.xyzx
  mul r3.xyz, r3.xyzx, cb4[8].zzzz
  add r0.w, r0.w, cb1[0].x
  max r3.w, r1.x, l(0.000010)
  add r4.x, r3.w, l(-0.000100)
  lt r4.x, r0.w, r4.x
  div r3.w, r0.w, r3.w
  add r4.y, r3.w, -cb0[26].w
  mul_sat r4.y, r4.y, cb0[27].y
  mul r4.z, r4.y, cb0[27].z
  round_ni r4.z, r4.z
  lt r4.w, r4.z, cb0[27].z
  add r5.x, r4.z, l(1.000000)
  movc r4.w, r4.w, r5.x, r4.z
  mad r4.y, r4.y, cb0[27].z, -r4.z
  mul r5.xy, r4.zwzz, l(4.000000, 4.000000, 0.000000, 0.000000)
  ftou r5.x, r5.x
  ld_indexable(buffer)(float,float,float,float) r6.x, r5.xxxx, t3.xyzw
  mad r5.xzw, r4.zzzz, l(4.000000, 0.000000, 4.000000, 4.000000), l(1.000000, 0.000000, 2.000000, 3.000000)
  ftou r5.xzw, r5.xxzw
  ld_indexable(buffer)(float,float,float,float) r6.y, r5.xxxx, t3.yxzw
  ld_indexable(buffer)(float,float,float,float) r6.z, r5.zzzz, t3.yzxw
  ld_indexable(buffer)(float,float,float,float) r6.w, r5.wwww, t3.yzwx
  ftou r4.z, r5.y
  ld_indexable(buffer)(float,float,float,float) r5.x, r4.zzzz, t3.xyzw
  mad r7.xyz, r4.wwww, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
  ftou r7.xyz, r7.xyzx
  ld_indexable(buffer)(float,float,float,float) r5.y, r7.xxxx, t3.yxzw
  ld_indexable(buffer)(float,float,float,float) r5.z, r7.yyyy, t3.yzxw
  ld_indexable(buffer)(float,float,float,float) r5.w, r7.zzzz, t3.yzwx
  add r5.xyzw, -r6.xyzw, r5.xyzw
  mad r5.xyzw, r4.yyyy, r5.xyzw, r6.xyzw
  mul r4.yzw, r5.xxyz, cb4[10].xxyz
  mul r5.x, r5.w, cb4[11].x
  mul r5.x, r5.x, cb4[11].y
  max r5.y, r1.y, l(0.000100)
  div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.y
  mul r3.xyz, r3.xyzx, r5.yyyy
  mul r3.xyz, r3.xyzx, cb1[0].xxxx
  mad r2.xyz, r3.xyzx, cb1[0].xxxx, r2.xyzx
  mov r5.yzw, r3.xxyz
else 
  uge r6.x, r0.x, r0.y
  and r0.z, r0.z, r6.x
  if_nz r0.z
    iadd r0.x, -r0.y, r0.x
    ige r6.xyzw, r0.xxxx, cb0[10].xyzw
    and r6.xyzw, r6.xyzw, l(1, 1, 1, 1)
    iadd r0.y, r6.y, r6.x
    iadd r0.y, r6.z, r0.y
    iadd r0.y, r6.w, r0.y
    ige r6.xyzw, r0.xxxx, cb0[11].xyzw
    and r6.xyzw, r6.xyzw, l(1, 1, 1, 1)
    iadd r0.z, r6.y, r6.x
    iadd r0.z, r6.z, r0.z
    iadd r0.z, r6.w, r0.z
    iadd r0.y, r0.z, r0.y
    iadd r0.x, r0.x, -cb0[r0.y + 12].w
    iadd r2.w, r0.x, cb3[0].y
    itof r0.x, r0.x
    mad r0.x, cb0[r0.y + 12].x, r0.x, cb0[r0.y + 12].y
    add r0.w, -r0.x, cb1[0].x
    mul r0.x, r0.x, cb1[0].y
    add r6.xyz, cb2[25].xyzx, -cb5[25].xyzx
    mad r0.xyz, r0.xxxx, r6.xyzx, cb5[25].xyzx
    imul null, r6.x, vThreadID.x, l(0x0019660d)
    imul null, r6.y, cb0[9].z, l(0x0019660d)
    iadd r6.xy, r6.xyxx, l(0x3c6ef35f, 0x3c6ef35f, 0, 0)
    imad r7.xyzw, r6.xxxx, r6.xxxx, l(0x3c3c2745, 0x3c22c138, 0x3c095b2b, 0x3beff51e)
    imad r8.xyzw, r6.yyyy, r7.xyzw, r6.xxxx
    imad r9.xyzw, r7.xyzw, r8.xyzw, r6.yyyy
    imad r6.xyzw, r8.xyzw, r9.xyzw, r6.xxxx
    imad r6.xyzw, r8.xyzw, r6.xyzw, r7.xyzw
    ishr r6.xyzw, r6.xyzw, l(8, 8, 8, 8)
    and r6.xyzw, r6.xyzw, l(0x00ffffff, 0x00ffffff, 0x00ffffff, 0x00ffffff)
    utof r6.xyzw, r6.xyzw
    mad r6.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000), l(0.000000, -1.000000, 0.000000, 0.000000)
    sincos r6.x, r7.x, r6.x
    mad r7.y, -r6.y, r6.y, l(1.000000)
    sqrt r7.y, r7.y
    mul r8.x, r7.y, r7.x
    mul r8.y, r6.x, r7.y
    log r6.x, r6.z
    mul r6.x, r6.x, l(0.333333)
    exp r6.x, r6.x
    mov r8.z, r6.y
    mul r6.xyz, r6.xxxx, r8.xyzx
    mul r6.xyz, r6.xyzx, cb4[0].zzzz
    mul r6.xyz, r6.xyzx, cb4[1].xyzx
    add r0.xyz, r0.xyzx, cb4[2].xyzx
    mul r7.xyz, r6.yyyy, cb2[1].xyzx
    mad r7.xyz, r6.xxxx, cb2[0].xyzx, r7.xyzx
    mad r6.xyz, r6.zzzz, cb2[2].xyzx, r7.xyzx
    add r0.xyz, r0.xyzx, r6.xyzx
    add r6.x, -cb4[3].z, cb4[3].w
    mul r6.x, r6.x, r6.w
    mad r1.x, r6.x, l(0.000000), cb4[3].z
    max r6.xyz, cb4[5].xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
    ieq r7.xy, cb4[4].zzzz, l(1, 0, 0, 0)
    or r6.w, r7.y, r7.x
    mul r7.xyz, r6.xyzx, cb2[30].xyzx
    add r8.xyz, cb2[25].yzxy, cb4[6].yzxy
    mul r9.xyzw, cb2[24].xyzw, cb4[7].wwww
    mul r10.xyzw, cb2[24].wzyx, cb4[7].xxxx
    mad r9.xyzw, r10.xyzw, l(1.000000, -1.000000, 1.000000, -1.000000), r9.xyzw
    mul r10.xyzw, cb2[24].zwxy, cb4[7].yyyy
    mad r9.xyzw, r10.xyzw, l(1.000000, 1.000000, -1.000000, -1.000000), r9.xyzw
    mul r10.xyzw, cb2[24].yxwz, cb4[7].zzzz
    mad r9.xyzw, r10.xyzw, l(-1.000000, 1.000000, 1.000000, -1.000000), r9.xyzw
    movc r9.xyzw, r6.wwww, cb4[7].xyzw, r9.xyzw
    movc r6.xyz, r6.wwww, r6.xyzx, r7.xyzx
    movc r7.xyz, r6.wwww, cb4[6].yzxy, r8.xyzx
    add r7.xyz, r0.yzxy, -r7.xyzx
    mul r8.xyzw, r9.xyzw, l(-1.000000, -1.000000, -1.000000, 1.000000)
    dp3 r6.w, r8.yzxy, r7.xyzx
    add r6.w, r6.w, r6.w
    dp3 r7.w, r8.xyzx, r8.xyzx
    mad r7.w, r8.w, r8.w, -r7.w
    mul r10.xyz, r7.zxyz, r7.wwww
    mad r10.xyz, r8.xyzx, r6.wwww, r10.xyzx
    mul r11.xyz, r7.xyzx, r8.zxyz
    mad r7.xyz, r8.yzxy, r7.yzxy, -r11.xyzx
    add r6.w, r9.w, r9.w
    mad r7.xyz, r7.xyzx, r6.wwww, r10.xyzx
    div r6.xyz, r7.xyzx, r6.xyzx
    add r7.xyz, r6.xyzx, -cb0[25].xyzx
    add r8.xyz, -cb0[25].xyzx, cb0[26].xyzx
    div r7.xyz, r7.xyzx, r8.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r7.xyz, r7.xyzx, t2.xyzw, s0, l(0.000000)
    dp3 r7.w, r9.xyzx, r7.xyzx
    add r7.w, r7.w, r7.w
    dp3 r8.w, r9.xyzx, r9.xyzx
    mad r8.w, r9.w, r9.w, -r8.w
    mul r10.xyz, r7.xyzx, r8.wwww
    mad r10.xyz, r9.xyzx, r7.wwww, r10.xyzx
    mul r11.xyz, r7.yzxy, r9.zxyz
    mad r7.xyz, r9.yzxy, r7.zxyz, -r11.xyzx
    mad r7.xyz, r7.xyzx, r6.wwww, r10.xyzx
    mul r7.xyz, r7.xyzx, cb4[8].yyyy
    add r9.xyz, -r8.xyzx, l(1000000.000000, 1000000.000000, 1000000.000000, 0.000000)
    mad r8.xyz, cb0[23].yzwy, r9.xyzx, r8.xyzx
    mad r6.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), -|r6.xyzx|
    min r6.y, r6.z, r6.y
    min r6.x, r6.y, r6.x
    max r6.x, r6.x, l(0.000000)
    max r6.y, cb4[8].x, l(1.000000)
    div r6.x, r6.x, r6.y
    mul r6.y, r6.x, l(-1.442695)
    exp r6.y, r6.y
    add r6.y, -r6.y, l(1.000000)
    min r6.x, r6.x, l(1.000000)
    movc r6.x, cb4[4].y, r6.y, r6.x
    movc r6.x, cb4[4].w, r6.x, l(1.000000)
    mul r6.xyz, r6.xxxx, r7.xyzx
    mul r6.xyz, r6.xyzx, cb4[8].zzzz
    max r6.w, r1.x, l(0.000010)
    add r7.x, r6.w, l(-0.000100)
    lt r4.x, r0.w, r7.x
    div r3.w, r0.w, r6.w
    add r6.w, r3.w, -cb0[26].w
    mul_sat r6.w, r6.w, cb0[27].y
    mul r7.x, r6.w, cb0[27].z
    round_ni r7.x, r7.x
    lt r7.y, r7.x, cb0[27].z
    add r7.z, r7.x, l(1.000000)
    movc r7.y, r7.y, r7.z, r7.x
    mad r6.w, r6.w, cb0[27].z, -r7.x
    mul r7.zw, r7.xxxy, l(0.000000, 0.000000, 4.000000, 4.000000)
    ftou r7.z, r7.z
    ld_indexable(buffer)(float,float,float,float) r8.x, r7.zzzz, t3.xyzw
    mad r9.xyz, r7.xxxx, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r9.xyz, r9.xyzx
    ld_indexable(buffer)(float,float,float,float) r8.y, r9.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r8.z, r9.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r8.w, r9.zzzz, t3.yzwx
    ftou r7.x, r7.w
    ld_indexable(buffer)(float,float,float,float) r9.x, r7.xxxx, t3.xyzw
    mad r7.xyz, r7.yyyy, l(4.000000, 4.000000, 4.000000, 0.000000), l(1.000000, 2.000000, 3.000000, 0.000000)
    ftou r7.xyz, r7.xyzx
    ld_indexable(buffer)(float,float,float,float) r9.y, r7.xxxx, t3.yxzw
    ld_indexable(buffer)(float,float,float,float) r9.z, r7.yyyy, t3.yzxw
    ld_indexable(buffer)(float,float,float,float) r9.w, r7.zzzz, t3.yzwx
    add r7.xyzw, -r8.xyzw, r9.xyzw
    mad r7.xyzw, r6.wwww, r7.xyzw, r8.xyzw
    mul r4.yzw, r7.xxyz, cb4[10].xxyz
    mul r6.w, r7.w, cb4[11].x
    mul r5.x, r6.w, cb4[11].y
    mul r3.xyz, r0.wwww, r6.xyzx
    mad r2.xyz, r3.xyzx, r0.wwww, r0.xyzx
    mov r1.y, l(1.000000)
    mov r5.yzw, r3.xxyz
    mov r1.zw, cb4[3].yyyy
  else 
    mov r0.w, l(0)
    mov r5.xyzw, l(0,0,0,0)
    mov r1.xyzw, l(0,0,0,0)
    mov r2.xyzw, l(0,0,0,0)
    mov r3.xyzw, l(0,0,0,0)
    mov r4.xyzw, l(0,0,0,0)
  endif 
endif 
and r0.x, r4.x, l(1)
store_structured g0.x, vThreadIDInGroup.x, l(0), r0.x
sync_g_t
and r0.yz, vThreadIDInGroup.xxxx, l(0, 3, 15, 0)
if_z r0.y
  iadd r6.xyz, vThreadIDInGroup.xxxx, l(1, 2, 3, 0)
  ld_structured r0.y, r6.x, l(0), g0.xxxx
  iadd r0.y, r0.y, r0.x
  ld_structured r6.w, r6.y, l(0), g0.xxxx
  iadd r6.w, r0.y, r6.w
  ld_structured r7.x, r6.z, l(0), g0.xxxx
  iadd r7.x, r6.w, r7.x
  store_structured g0.x, vThreadIDInGroup.x, l(0), l(0)
  store_structured g0.x, r6.x, l(0), r0.x
  store_structured g0.x, r6.y, l(0), r0.y
  store_structured g0.x, r6.z, l(0), r6.w
  ushr r0.x, vThreadIDInGroup.x, l(2)
  store_structured g1.x, r0.x, l(0), r7.x
endif 
sync_g_t
if_z r0.z
  ushr r0.x, vThreadIDInGroup.x, l(2)
  ld_structured r0.y, r0.x, l(0), g1.xxxx
  iadd r6.xyz, r0.xxxx, l(1, 2, 3, 0)
  ld_structured r0.z, r6.x, l(0), g1.xxxx
  iadd r0.z, r0.z, r0.y
  ld_structured r6.w, r6.y, l(0), g1.xxxx
  iadd r6.w, r0.z, r6.w
  ld_structured r7.x, r6.z, l(0), g1.xxxx
  iadd r7.x, r6.w, r7.x
  store_structured g1.x, r0.x, l(0), l(0)
  store_structured g1.x, r6.x, l(0), r0.y
  store_structured g1.x, r6.y, l(0), r0.z
  store_structured g1.x, r6.z, l(0), r6.w
  ushr r0.x, r0.x, l(2)
  store_structured g2.x, r0.x, l(0), r7.x
endif 
sync_g_t
if_z vThreadIDInGroup.x
  ld_structured r0.x, l(0), l(0), g2.xxxx
  ld_structured r0.y, l(1), l(0), g2.xxxx
  iadd r0.y, r0.y, r0.x
  store_structured g2.x, l(0), l(0), l(0)
  store_structured g2.x, l(1), l(0), r0.x
  imm_atomic_iadd r6.x, u2, cb0[23].x, r0.y
  store_raw g3.x, l(0), r6.x
endif 
sync_g_t
if_nz r4.x
  ld_raw r0.x, l(0), g3.xxxx
  ushr r0.yz, vThreadIDInGroup.xxxx, l(0, 4, 2, 0)
  ld_structured r0.y, r0.y, l(0), g2.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, r0.z, l(0), g1.xxxx
  iadd r0.x, r0.y, r0.x
  ld_structured r0.y, vThreadIDInGroup.x, l(0), g0.xxxx
  iadd r0.x, r0.y, r0.x
  iadd r0.y, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.yyyy, r0.wwww
  iadd r0.z, r0.x, cb0[21].z
  iadd r0.z, r0.z, cb0[20].y
  store_uav_typed u1.xyzw, r0.zzzz, r4.yyyy
  ishl r6.xyzw, cb0[21].zzzz, l(1, 2, 3, 4)
  iadd r6.xyzw, r0.xxxx, r6.xyzw
  iadd r6.xyzw, r6.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r6.xxxx, r4.zzzz
  imad r7.xyzw, l(3, 5, 6, 7), cb0[21].zzzz, r0.xxxx
  iadd r7.xyzw, r7.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r7.xxxx, r4.wwww
  store_uav_typed u1.xyzw, r6.yyyy, r5.xxxx
  store_uav_typed u1.xyzw, r7.yyyy, r1.xxxx
  store_uav_typed u1.xyzw, r7.zzzz, r1.yyyy
  store_uav_typed u1.xyzw, r7.wwww, r3.wwww
  store_uav_typed u1.xyzw, r6.zzzz, r2.xxxx
  imad r4.xyzw, l(9, 10, 11, 12), cb0[21].zzzz, r0.xxxx
  iadd r4.xyzw, r4.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r4.xxxx, r2.yyyy
  store_uav_typed u1.xyzw, r4.yyyy, r2.zzzz
  store_uav_typed u1.xyzw, r4.zzzz, r5.yyyy
  store_uav_typed u1.xyzw, r4.wwww, r5.zzzz
  imad r4.xyzw, l(13, 14, 15, 17), cb0[21].zzzz, r0.xxxx
  iadd r4.xyzw, r4.xyzw, cb0[20].yyyy
  store_uav_typed u1.xyzw, r4.xxxx, r5.wwww
  store_uav_typed u1.xyzw, r4.yyyy, r1.zzzz
  store_uav_typed u1.xyzw, r4.zzzz, r1.wwww
  store_uav_typed u0.xyzw, r0.yyyy, r2.wwww
  store_uav_typed u1.xyzw, r6.wwww, r3.xxxx
  store_uav_typed u1.xyzw, r4.wwww, r3.yyyy
  imad r0.x, l(18), cb0[21].z, r0.x
  iadd r0.x, r0.x, cb0[20].y
  store_uav_typed u1.xyzw, r0.xxxx, r3.zzzz
endif 
ret 
// Approximately 372 instruction slots used
